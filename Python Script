#FILE PROCESSING

# Importing the os module for operating system dependent functionality
import os

# Function to extract worm names from a given line if the word 'worm' is present
def extract_worms_from_line(line):
    # Initialize a set for storing worm names found in the line
    worms = set()
    # Split the line into individual fields (words) using the default whitespace separator
    fields = line.split()
    # Loop through each field in the line
    for field in fields:
        # Check if 'worm' is in the field, making the check case-insensitive
        if "worm" in field.lower():
            # If 'worm' is found, add the field (worm name) to the set
            worms.add(field)
    # Return the set of extracted worm names
    return worms

# Function to process a log file and extract unique worm names
def process_log_file(file_path):
    # Initialize a set to store all unique worm names found in the file
    uniqueWorms = set()
    try:
        # Open the file in read mode
        with open(file_path, 'r') as log_file:
            # Iterate through each line in the file
            for each_line in log_file:
                # Update the set with worm names found in the current line
                uniqueWorms.update(extract_worms_from_line(each_line))
        # Return the set of all unique worm names found in the file
        return uniqueWorms
    except FileNotFoundError:
        # Print an error message if the file is not found
        print(f"The file {file_path} was not found.")
        # Return an empty set in case of an error
        return set()

# Main function of the script
def main():
    # Specify the path to the file to be processed
    file_path = "redhat.txt"
    # Process the file and sort the unique worm names
    sorted_uniqueWorms = sorted(process_log_file(file_path))
    # Loop over the sorted list of unique worm names
    for worm in sorted_uniqueWorms:
        # Print each unique worm name to the console
        print(worm)

# Execute the main function if the script is run as the main program
if __name__ == "__main__":
    main()
